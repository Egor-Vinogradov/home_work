Задание 1.1. - Создан класс Person.
Задание 1.2. - Создан класс Animal.
Кроме полей по условию, добавлены final поля для длины пароля, интервала возраста и интервала длины ника

Задание 2.1. - Создан класс-компаратор PersonPasswordLengthComparator для сравнения длины паролей пользователей
Задание 2.2. - Создан класс-компаратор PersonPasswordLengthAndNickComparator для сравнения паролей пользователей, затем ников пользователей, согласно условию задачи
Задание 2.3. - Создан класс-компаратор AnimalAgeComparator для сравнения возраста животных
Задание 2.4. - Создан класс-компаратор AnimalAgeAndNickComparator для сравнения возраста животных, затем ников животных, согласно условию задачи

Задание 3.1. - Для генерации заданного числа объектов одного класса создан класс дженерик, который содержит в себе данные всех коллекций, согласно условию задачи
	       В этом классе созданы методы: fillingLinkedList, fillingArrayList, fillingHashSet, fillingTreeSet для генерации соответсвующих коллекций.
	       Указанные методы используют утилиты для рандома из класса Utils
	       Длина сгенерированных ника, пароля и возраста меняется рандомно в пределах интервала

Задание 3.2. - Заполнение коллекций происходит при помощи методов из Задания 3.1.

Задание 3.3.1. - Сортировка средствами JDK для List производится при помощи метода sortListJDK дженерик-класса. Используется Collections.sort()
		 Сортировка средствами JDK для Set производится при помощи метода sortSetJDK дженерик-класса. Используется преобразование Set в TreeSet

Задание 3.3.2. - Не реализовано

Задание 3.4. - Распечатка в консоль производится с помощью утилитного метода print() в который передается Map, который в свою очередь содержит название операции и время, необходимое на выполнение
	       Сделано с перспективой на многопоточность
	       Замер времени производится в методе дженерик-класса measurementTimeWorkWithCollections, который возвращает Map с результатом

Задание 3.4.1. - Замер времени для заполнения коллекции производится непосредственно в методе measurementTimeWorkWithCollections

Задание 3.4.2. - Замер времени для итерирования происходит в методе measurementTimeWorkWithCollections при помощи методов из класса Utils:
		- measurementTimeIteratorList
		- measurementTimeIteratorSet
		- measurementTimeNotIterator - при помощи fori
Задание 3.4.3. - Замер времени на удаление всех элементов коллекции происходит в методе measurementTimeWorkWithCollections при помощи методов из класса Utils:
		- measurementTimeIteratorRemoveList - при помощи итератора для List
		- measurementTimeIteratorRemoveSet - при помощи итератора для Set
		- measurementTimeRemove - при помощи метода clear()